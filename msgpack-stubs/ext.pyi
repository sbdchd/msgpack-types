from __future__ import annotations

import datetime
from typing import NamedTuple

class ExtType(NamedTuple):
    code: int
    data: bytes

class Timestamp:
    def __init__(self, seconds: int, nanoseconds: int = ...) -> None: ...
    def __eq__(self, o: object) -> bool: ...
    def __ne__(self, o: object) -> bool: ...
    def __hash__(self) -> int: ...
    @staticmethod
    def from_bytes(b: bytes) -> Timestamp: ...
    def to_bytes(self) -> bytes: ...
    @staticmethod
    def from_unix(unix_sec: float) -> Timestamp: ...
    def to_unix(self) -> float: ...
    @staticmethod
    def from_unix_nano(unix_ns: int) -> Timestamp: ...
    def to_unix_nano(self) -> int: ...
    def to_datetime(self) -> datetime.datetime: ...
    @staticmethod
    def from_datetime(dt: datetime.datetime) -> Timestamp: ...
